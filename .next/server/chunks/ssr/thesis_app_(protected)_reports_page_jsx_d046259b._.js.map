{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ALDEGS09/thesis/app/%28protected%29/reports/page.jsx"],"sourcesContent":["\"use client\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function ReportsPage() {\r\n  const [reportType, setReportType] = useState(\"monthly\")\r\n  const [message, setMessage] = useState(\"\")\r\n\r\n  const handleGenerateReport = async (format) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n\r\n      const response = await fetch(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/api/reports/generate/`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ type: reportType, format }),\r\n        }\r\n      )\r\n\r\n      if (!response.ok) throw new Error(\"Failed to generate report\")\r\n\r\n      // Blob download (PDF/Excel/Word)\r\n      const blob = await response.blob()\r\n      const url = window.URL.createObjectURL(blob)\r\n      const a = document.createElement(\"a\")\r\n      a.href = url\r\n      a.download = `FUNDCAST_${reportType}_report.${format}`\r\n      document.body.appendChild(a)\r\n      a.click()\r\n      a.remove()\r\n      window.URL.revokeObjectURL(url)\r\n\r\n      setMessage(`‚úÖ ${reportType} report exported to ${format.toUpperCase()}`)\r\n    } catch (error) {\r\n      setMessage(\"‚ùå Error generating report\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <h1 className=\"text-2xl font-bold text-green-700\">üìä Report Generation</h1>\r\n      <p className=\"text-gray-600\">\r\n        Generate automatic financial reports following <b>RA 7160</b> (Local Government Code) \r\n        and <b>RA 9184</b> (Procurement Law).\r\n      </p>\r\n\r\n      <div className=\"shadow-md bg-white rounded-lg p-6 space-y-4\">\r\n        {/* Select Report Type */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Select Report Type:\r\n          </label>\r\n          <select\r\n            value={reportType}\r\n            onChange={(e) => setReportType(e.target.value)}\r\n            className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n          >\r\n            <option value=\"monthly\">üìÖ Monthly Report</option>\r\n            <option value=\"quarterly\">üìä Quarterly Report</option>\r\n            <option value=\"annual\">üìÜ Annual Report</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Export Buttons */}\r\n        <div className=\"flex space-x-3\">\r\n          <button\r\n            onClick={() => handleGenerateReport(\"pdf\")}\r\n            className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Export to PDF\r\n          </button>\r\n          <button\r\n            onClick={() => handleGenerateReport(\"xlsx\")}\r\n            className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Export to Excel\r\n          </button>\r\n          <button\r\n            onClick={() => handleGenerateReport(\"docx\")}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Export to Word\r\n          </button>\r\n        </div>\r\n\r\n        {/* Message */}\r\n        {message && <p className=\"text-sm mt-2\">{message}</p>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,2NAAQ,EAAC;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,2NAAQ,EAAC;IAEvC,MAAM,uBAAuB,OAAO;QAClC,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YAEnC,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,EAC1D;gBACE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,MAAM;oBAAY;gBAAO;YAClD;YAGF,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,iCAAiC;YACjC,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,CAAC;YACvC,MAAM,IAAI,SAAS,aAAa,CAAC;YACjC,EAAE,IAAI,GAAG;YACT,EAAE,QAAQ,GAAG,CAAC,SAAS,EAAE,WAAW,QAAQ,EAAE,QAAQ;YACtD,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,EAAE,KAAK;YACP,EAAE,MAAM;YACR,OAAO,GAAG,CAAC,eAAe,CAAC;YAE3B,WAAW,CAAC,EAAE,EAAE,WAAW,oBAAoB,EAAE,OAAO,WAAW,IAAI;QACzE,EAAE,OAAO,OAAO;YACd,WAAW;QACb;IACF;IAEA,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAG,WAAU;0BAAoC;;;;;;0BAClD,wPAAC;gBAAE,WAAU;;oBAAgB;kCACoB,wPAAC;kCAAE;;;;;;oBAAW;kCACzD,wPAAC;kCAAE;;;;;;oBAAW;;;;;;;0BAGpB,wPAAC;gBAAI,WAAU;;kCAEb,wPAAC;;0CACC,wPAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,wPAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gCAC7C,WAAU;;kDAEV,wPAAC;wCAAO,OAAM;kDAAU;;;;;;kDACxB,wPAAC;wCAAO,OAAM;kDAAY;;;;;;kDAC1B,wPAAC;wCAAO,OAAM;kDAAS;;;;;;;;;;;;;;;;;;kCAK3B,wPAAC;wBAAI,WAAU;;0CACb,wPAAC;gCACC,SAAS,IAAM,qBAAqB;gCACpC,WAAU;0CACX;;;;;;0CAGD,wPAAC;gCACC,SAAS,IAAM,qBAAqB;gCACpC,WAAU;0CACX;;;;;;0CAGD,wPAAC;gCACC,SAAS,IAAM,qBAAqB;gCACpC,WAAU;0CACX;;;;;;;;;;;;oBAMF,yBAAW,wPAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;;AAIjD","debugId":null}}]
}